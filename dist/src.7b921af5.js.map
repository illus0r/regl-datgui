{"version":3,"sources":["shader.frag","index.js"],"names":["module","exports","regl","require","drawTriangle","frag","shaderFrag","vert","attributes","position","uniforms","color","prop","count","frame","time","clear","depth","Math","cos","sin"],"mappings":";AAAAA,OAAOC,QAAQ;;;;;;AC2Bf,aA1BA,IAAA,EAAA,EAAA,QAAA,kBA0BA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAvBA,IAAMC,EAAOC,QAAQ,OAARA,GAEPC,EAAeF,EAAK,CAIzBG,KAAMC,EAJmB,QAKzBC,KALyB,sGAOxBC,WAAY,CACVC,SAAU,CAAC,EAAE,EAAG,GAAI,CAAC,GAAI,GAAI,EAAE,GAAI,KAGrCC,SAAU,CAERC,MAAOT,EAAKU,KAAK,UAInBC,MAAO,IAITX,EAAKY,MAAM,SAAY,GAAVC,IAAAA,EAAAA,EAAAA,KAEXb,EAAKc,MAAM,CACTL,MAAO,CAAC,EAAG,EAAG,EAAG,GACjBM,MAAO,IAITb,EAAa,CACXO,MAAO,CACLO,KAAKC,IAAW,GAAPJ,GACTG,KAAKE,IAAW,GAAPL,GACTG,KAAKC,IAAW,GAAPJ,GACT","file":"src.7b921af5.js","sourceRoot":"../src","sourcesContent":["module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\nuniform vec4 color;\\nvoid main() {\\n\\tgl_FragColor = vec4(vec3(color.gbr),1.);\\n}\\n\";","// TODO в 9 и 17 строки надо как-то импортнуть шейдеры из файлов shader.frag и shader.vert\nimport shaderFrag from \"./shader.frag\";\n//import shaderVert from \"./shader.vert\";\n\nconst regl = require('regl')()\n\nconst drawTriangle = regl({\n\n  // Shaders in regl are just strings.  You can use glslify or whatever you want\n  // to define them.  No need to manually create shader objects.\n\tfrag: shaderFrag,\n\tvert: `precision mediump float;attribute vec2 position;void main() {\tgl_Position = vec4(position, 0, 1);}`,\n\n  attributes: {\n    position: [[-1, 3], [3, -1], [-1, -1]]\n  },\n\n  uniforms: {\n    // This defines the color of the triangle to be a dynamic variable\n    color: regl.prop('color')\n  },\n\n  // This tells regl the number of vertices to draw in this command\n  count: 3\n})\n\n// regl.frame() wraps requestAnimationFrame and also handles viewport changes\nregl.frame(({time}) => {\n  // clear contents of the drawing buffer\n  regl.clear({\n    color: [0, 0, 0, 0],\n    depth: 1\n  })\n\n  // draw a triangle using the command defined above\n  drawTriangle({\n    color: [\n      Math.cos(time * 0.1),\n      Math.sin(time * 0.8),\n      Math.cos(time * 0.3),\n      1\n    ]\n  })\n})\n"]}